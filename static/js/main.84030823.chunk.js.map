{"version":3,"sources":["logo.svg","componentes/BarCoordenadas.js","componentes/CardBasico.js","componentes/GridContenido.js","componentes/NavMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BarCoordenadas","className","this","props","longitud","latitud","zoom","React","Component","CardBasico","swal","Card","style","width","Img","variant","src","Body","Title","titulo","Text","Button","onClick","alerta","GridContenido","Container","Row","Col","NavMenu","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Form","inline","FormControl","type","placeholder","mapboxgl","accessToken","Application","state","lng","lat","map","Map","container","mapContainer","center","on","setState","getCenter","toFixed","getZoom","cargarMapa","ref","el","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84030823.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\n\r\nclass BarCoordenadas extends React.Component{\r\n\r\nrender(){\r\n    return(\r\n    <div className='sidebarStyle'>\r\n        <div>Longitude: {this.props.longitud} <br/> Latitude: {this.props.latitud}  <br/> Zoom: {this.props.zoom}</div>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default BarCoordenadas;","import React from 'react';\r\nimport {Card,Button} from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\n\r\nclass CardBasico extends React.Component{\r\n\r\nalerta(){\r\n    swal(\"Mas informaci√≥n\", \"Usuario\", \"success\");\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <Card style={{ width: '18rem' }}>\r\n                            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n                            <Card.Body>\r\n                            <Card.Title>{this.props.titulo}</Card.Title>\r\n                                <Card.Text>\r\n                                Some quick example text to build on the card title and make up the bulk of\r\n                                the card's content.\r\n                                </Card.Text>\r\n                                <Button variant=\"primary\" onClick={()=> this.alerta()}>Go somewhere</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n    )\r\n}\r\n}\r\n\r\nexport default CardBasico;","import React from 'react';\r\nimport {Container,Row,Col,Card,Button} from 'react-bootstrap';\r\nimport CardBasico from './CardBasico';\r\n\r\n\r\nclass GridContenido extends React.Component{\r\n\r\nrender(){\r\n    return(\r\n            <Container className='ContenedorContendio'>\r\n                <Row>\r\n                    <Col>\r\n                       <CardBasico titulo='MapBox'></CardBasico>\r\n                    </Col>\r\n                    <Col>\r\n                        <CardBasico titulo='MapBox1'></CardBasico>\r\n                    </Col>\r\n                    <Col>\r\n                        <CardBasico titulo='MapBox2'></CardBasico>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n    )\r\n}\r\n}\r\n\r\nexport default GridContenido;","import React from 'react';\r\nimport {Navbar,Form,Button,FormControl,NavDropdown,Nav } from 'react-bootstrap';\r\n\r\nclass NavMenu extends React.Component{\r\n\r\nrender(){\r\n    return(\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n                </Nav>\r\n                <Form inline>\r\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                <Button variant=\"outline-success\">Search</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BarCoordenadas from './componentes/BarCoordenadas';\nimport mapboxgl from 'mapbox-gl';\nimport swal from 'sweetalert';\nimport { Dropdown } from 'react-bootstrap';\nimport GridContenido from './componentes/GridContenido';\nimport CardBasico from './componentes/CardBasico';\nimport NavMenu from './componentes/NavMenu';\nimport { Router, Route, Switch, useHistory } from \"react-router\";\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFudWVsOTQiLCJhIjoiY2sweHlsNWozMDUzMTNucW5mdDZlOXJzNSJ9.WH8MEy5frVRM8ejqs-xebg';\n//function App() {\n /*  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  ); */\n  class Application extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        lng:  -77.3158,\n        lat: -1.5933,\n        zoom: 6\n        };\n        }\n\n        cargarMapa(){\n          const map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: 'mapbox://styles/mapbox/streets-v11',\n            center: [this.state.lng, this.state.lat],\n            zoom: this.state.zoom\n            });\n            map.on('move', () => {\n                this.setState({\n                lng: map.getCenter().lng.toFixed(4),\n                lat: map.getCenter().lat.toFixed(4),\n                zoom: map.getZoom().toFixed(2)\n                });\n                });\n        }\n\n        alerta(){\n          swal(\"Bienvenido\", \"Usuario\", \"success\");\n        }\n\n        componentDidMount() {\n           this.cargarMapa();\n           this.alerta();\n            }\n\n            render() {\n                return (\n                    <div>\n                      <BarCoordenadas latitud={this.state.lat} longitud={this.state.lng} zoom={this.state.zoom}/>\n                    <div ref={el => this.mapContainer = el} className='mapContainer' />\n                   {/*  <Dropdown className='text-right' >\n                      <Dropdown.Toggle className='BotonD'  id=\"dropdown-basic\">\n                        Dropdown Button\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown> */}\n                     <NavMenu></NavMenu>\n                    <GridContenido ></GridContenido>\n                    </div>\n                )\n                }\n    }\n\n\n//}\n\nexport default Application;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n\n\n\n    ReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}